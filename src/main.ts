const targetMailLabel = "GPT/willCheck"
const alreadyCheckedLabel = "GPT/didCheck"

const systemContent = `
メールの内容を読んで、下記の場合に該当する場合は、その内容をJSON形式で返してください。
- ホテルや映画館や新幹線、サービスなどの予約確認のメール

JSONのフォーマットは下記を参考にしてください。
先頭や末尾に\`\`\`などは付けないでください。

{
  "title": "映画:トイ・ストーリー", 
  "startDate":"2024-03-31T10:30:00",
  "endDate":"2024-03-31T11:30:00",
  "location":"TOHOシネマズ六本木ヒルズ"
  "reserveInfo": "予約番号:1234567890"
}

下記の場合はJsonの代わりに、null だけを返してください
- メールの中に予約などの文言が含まれないメールの場合
- 開始時刻(startDate) が分からない場合
- 明らかに広告や宣伝などのメールの場合

title は、明確に、誰と、何をするか、などがわかるようにしてください。
locationが不明の場合は "" を設定してください。
startDateのみが分かる場合は、endDateは1時間後の時間を設定してください。
メール1件に対して、最大1つの予定を返してください。配列では返さないでください。
メールの送信日時をstartDateとして扱わないように気をつけてください。
`;

function main() {
    const threads = getLabeledEmailThreads(targetMailLabel,10);

    threads.forEach((thread) => {
        const messages = thread.getMessages();
        const mail = messages[messages.length - 1];


        const body = mail.getPlainBody();
        console.log(mail.getSubject());
        const resultString = askToChatGPT(
            systemContent,
            body.substring(0, 1000)
        );

        thread.removeLabel(GmailApp.getUserLabelByName(targetMailLabel));
        thread.addLabel(GmailApp.getUserLabelByName(alreadyCheckedLabel));

        console.log(resultString);
        if (resultString == null) {
            return;
        }
        const result = JSON.parse(resultString);
        console.log(result);

        if (result == null) {
            return;
        }
        if (result.startDate == null) {
            return;
        }
        if (result.endDate == null) {
            return;
        }
        const description = `
【タイトル】: ${mail.getSubject()}
【受信日時】: ${formatGmailDate(mail, "YYYY/MM/DD")}
【リンク】　: ${getChromePermalink(thread)}
【予約情報】: ${result.reserveInfo}
【本文】　　: ${body.substring(0, 1000)}

Generated by GPT
`;
        CalendarApp.createEvent(
            result.title,
            new Date(result.startDate),
            new Date(result.endDate),
            { location: result.location, description: description }
        ).setColor(CalendarApp.EventColor.GRAY);
    });
}
